h:  The hour without a leading zero (0 to 23 or 1 to 12 if AM/PM display)

hh:  The hour with a leading zero (00 to 23 or 01 to 12 if AM/PM display)

H:  The hour without a leading zero (0 to 23, even with AM/PM display)

HH:  The hour with a leading zero (00 to 23, even with AM/PM display)

m:  The minute without a leading zero (0 to 59)

mm:  The minute with a leading zero (00 to 59)

s:  The whole second, without any leading zero (0 to 59)

ss:  The whole second, with a leading zero where applicable (00 to 59)

z or zz:  The fractional part of the second, to go after a decimal point, without trailing zeroes. Thus "s.z" reports the seconds to full available (millisecond) precision without trailing zeroes (0 to 999). For example, "s.z" would produce "0.25" for a time a quarter second into a minute.

zzz:  The fractional part of the second, to millisecond precision, including trailing zeroes where applicable (000 to 999). For example, "ss.zzz" would produce "00.250" for a time a quarter second into a minute.

AP or A:  Use AM/PM display. A/AP will be replaced by 'AM' or 'PM'. In localized forms (only relevant to QLocale::toString()), the locale-appropriate text is converted to upper-case.

ap or a:  Use am/pm display. a/ap will be replaced by 'am' or 'pm'. In localized forms (only relevant to QLocale::toString()), the locale-appropriate text is converted to lower-case.

aP or Ap:  Use AM/PM display (since 6.3). aP/Ap will be replaced by 'AM' or 'PM'. In localized forms (only relevant to QLocale::toString()), the locale-appropriate text (returned by QLocale::amText() or QLocale::pmText()) is used without change of case.

t:  The timezone abbreviation (for example "CEST"). Note that time zone abbreviations are not unique. In particular, fromString() cannot parse this.

tt:  The timezone's offset from UTC with no colon between the hours and minutes (for example "+0200").

ttt:  The timezone's offset from UTC with a colon between the hours and minutes (for example "+02:00").

tttt:  The timezone name, as provided by QTimeZone::displayName() with the QTimeZone::LongName type. This may depend on the operating system in use. If no such name is available, the IANA ID of the zone (such as "Europe/Berlin") may be used. It may give no indication of whether the datetime was in daylight-saving time or standard time, which may lead to ambiguity if the datetime falls in an hour repeated by a transition between the two.

Sourced from https://doc.qt.io